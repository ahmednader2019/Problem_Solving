{"id":761608354,"question_id":64,"lang":"cpp","lang_name":"C++","time":"2 years, 3 months","timestamp":1659284199,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/761608354/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"10.1 MB","code":"class Solution {\npublic:\n    int minPathSum(vector<vector<int>>& grid) {\n        //Fast I/O in C++\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        \n        int rows = grid.size();\n        if(rows==0)\n            return 0;\n        int cols = grid[0].size();\n        vector<vector<int>> dp(rows,vector<int>(cols,0));\n        int i,j;\n        \n        dp[0][0] = grid[0][0];  //1st element is starting point\n        //Fill 1st row\n        for(i=1;i<cols;++i)\n            dp[0][i] = dp[0][i-1] + grid[0][i];\n        \n        //Fill 1st Col\n        for(i=1;i<rows;++i)\n            dp[i][0] = dp[i-1][0] + grid[i][0];\n        \n        //Now fill the rest of the cell\n        for(i=1;i<rows;++i)\n        {\n            for(j=1;j<cols;++j)\n                dp[i][j] = grid[i][j] + min(dp[i-1][j],dp[i][j-1]);\n        }\n        return dp[rows-1][cols-1];\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}